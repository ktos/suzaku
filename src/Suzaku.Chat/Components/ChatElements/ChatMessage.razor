@using Suzaku.Chat.Helpers
@using Suzaku.Chat.Models
@using Suzaku.Chat.Services
@inject Microsoft.Extensions.Options.IOptions<UserConfiguration> UserConfig

@if (!IsMine)
{
	if (!IsGrouped)
	{
		<div class="d-flex justify-content-between">
			<ParticipantName Name="@Element.Sender"></ParticipantName>
			<MessageTime Timestamp="Element.Timestamp"></MessageTime>
		</div>
	}
	<div class="d-flex flex-row justify-content-start" style="@(IsGrouped ? "margin-top: -0.80rem; margin-left: 55px" : "")">
		@if (!IsGrouped)
		{
			<Avatar IsMine="false" Name="@Element.Sender"></Avatar>
		}
		<div>
			<div class="small ms-3 p-2 pt-0 pb-0 mb-3 rounded-3 chat-message" style="background-color: #f5f6f7">
				@if (Element.Content!.Length < 5 && IsEmoji(Element.Content[0]))
				{
					<p class="fs-1">@Element.Content</p>
				}
				else
				{
					<MarkdownSection Content="@Element.Content"></MarkdownSection>
				}
			</div>
		</div>
	</div>
}
else
{
	@if (!IsGrouped)
	{
		<div class="d-flex justify-content-between">
			<MessageTime Timestamp="Element.Timestamp"></MessageTime>
			<p class="small mb-1 fw-bold">@UserConfig.Value.Name</p>
		</div>
	}
	<div class="d-flex flex-row justify-content-end pt-1" style="@(IsGrouped ? "margin-top: -1.2rem; margin-right: 55px" : "")">
		<div>
			<div class="small p-2 pt-0 pb-0 me-3 text-white rounded-3 bg-warning">
				@if (Element.Content!.Length < 5 && IsEmoji(Element.Content[0]))
				{
					<p class="fs-1">@Element.Content</p>
				}
				else
				{
					<MarkdownSection Content="@Element.Content"></MarkdownSection>
				}
			</div>
		</div>
		@if (!IsGrouped)
		{
			<Avatar IsMine="true"></Avatar>
		}
	</div>
}

@code {
	/// <summary>
	/// The element to be shown
	/// </summary>
	[Parameter] public required Message Element { get; set; }

	/// <summary>
	/// Should it be displayed as user's or bot's message
	/// </summary>
	[Parameter] public bool IsMine { get; set; }

	/// <summary>
	/// Should it be displayed in a grouped form
	/// </summary>
	[Parameter] public bool IsGrouped { get; set; }

	private bool IsEmoji(char character)
	{
		var category = Char.GetUnicodeCategory(character);
		return category == System.Globalization.UnicodeCategory.OtherSymbol || category == System.Globalization.UnicodeCategory.Surrogate;
	}
}
